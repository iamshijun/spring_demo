<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
       http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd
       "
	  >
<!-- 	<context:component-scan base-package="cjava.walker.testcase.task" />	 -->
	<bean id="appService" class="org.springframework.feature_test.schedule.AppService"></bean>
	
	<!-- 
		TaskNamespaceHandler为我们提供的是一个org.springframework.scheduling.config.TaskExecutorFactoryBean 工厂类
		他会根据情况为我们选择backport 或者不是backport 的 ThreadPoolTaskExecutor!
	 -->	
	<task:executor id="taskExecutor" pool-size="4" />
	<!-- 通常用于给异步调用的方法提供一个 执行的线程池 -->
	
	<!-- 使用的是ThreadPoolTaskScheduler -->
	<task:scheduler id="taskScheduler" pool-size="4"/>
	<!-- 通常用于执行schduled任务! -->
	
	<!-- xml driven xml驱动的方式 如果没有使用 下面的task:annotation-driven -->
	<task:scheduled-tasks scheduler="taskScheduler"> <!-- scheduler需要的是一个TaskScheduler是TaskExecutor哦! -->
		<task:scheduled ref="appService" method="doScheduleTaskWithXmlDriven" fixed-delay="3000"/>
	</task:scheduled-tasks>
	<!--
		<bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"
			p:corePoolSize="5" p:maxPoolSize="25" />
			
		使用这种方式好处在于因为标签 task:executor( task:scheduler)中只能够设置一些核心属性 像threadNamePrefix属性 设置线程名称前缀的不能够设置
		这个使用就是用标准的bean的生命模式来定义TaskExecutor!
	-->
	
	<task:annotation-driven executor="taskExecutor" scheduler="taskScheduler"/>

</beans>